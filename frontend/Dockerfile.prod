# Production Dockerfile for Ecotouch Frontend
# Multi-stage build for optimized React production build

# =============================================================================
# BUILD STAGE: Build React application
# =============================================================================
FROM node:18-alpine AS builder

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git \
    && rm -rf /var/cache/apk/*

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --legacy-peer-deps && npm cache clean --force

# Copy source code
COPY . .

# Build production application
RUN npm run build

# =============================================================================
# PRODUCTION STAGE: Serve with nginx
# =============================================================================
FROM nginx:alpine AS production

# Copy built application from builder stage
COPY --from=builder /app/build /usr/share/nginx/html

# Copy nginx configuration for React Router support
COPY nginx.conf /etc/nginx/nginx.conf

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S ecotouch -u 1001 && \
    chown -R ecotouch:nodejs /usr/share/nginx/html && \
    chown -R ecotouch:nodejs /var/cache/nginx && \
    chown -R ecotouch:nodejs /var/log/nginx && \
    chown -R ecotouch:nodejs /etc/nginx/conf.d && \
    touch /var/run/nginx.pid && \
    chown -R ecotouch:nodejs /var/run/nginx.pid

# Switch to non-root user
USER ecotouch

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
